@use '../../../styles/colors';
@use '../../../styles/common';
@use '../../../styles/typography';

$board__size: 30vw;

.boardWrapper {
    display: grid;
    grid-template-areas:
        'vertical board'
        '. horizontal';
    grid-template-columns: 1fr $board__size;
    grid-template-rows: $board__size 1fr;
    user-select: none;
}

.board {
    grid-area: board;
    width: $board__size;
    height: $board__size;
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(8, 1fr);
    grid-gap: 2px;
    box-sizing: border-box;
}

.tile {
    border-radius: 5px;
    box-sizing: border-box;
    padding: 2px;
}

.tile * {
    width: $board__size / 10;
    height: $board__size / 10;
}

.blackTile {
    border: 2px solid colors.$red;
    //shadow-blue-2 with inset
    box-shadow: inset 0px 0px 12px #fd6059, 0px 0px 5px #fd6059, 0px 0px 2px #fd6059;
}

.whiteTile {
    border: 2px solid colors.$blue;
    //shadow-blue-2 with inset
    box-shadow: inset 0px 0px 12px #1ec8c8, 0px 0px 5px #1ec8c8, 0px 0px 2px #1ec8c8;
}

.verticalAxi {
    grid-area: vertical;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: space-around;
    color: colors.$blue;
    height: $board__size;
    margin-right: 8px;
    @extend %h4;

    span {
        @extend %shadow-blue-text;
    }
}

.horizontalAxi {
    grid-area: horizontal;
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    justify-content: space-around;
    color: colors.$red;
    width: $board__size;
    @extend %h4;

    span {
        @extend %shadow-red-text;
    }
}

.player {
    &.possibleMove {
        //Piece not selected
        background-image: url('./images/blackSide/circle.svg');
        background-position: center;
        background-size: 50% auto;
        background-repeat: no-repeat;
    }

    &.possibleMoveHover {
        //Piece selected
        background-image: url('./images/blackSide/hollow-circle.svg'), url('./images/blackSide/hollow-circle.svg'),
            url('./images/blackSide/circle.svg');
        background-position: center;
        background-size: 100%, 80%, 40%;
        background-repeat: no-repeat;
    }

    &.capture {
        background-image: url('./images/blackSide/hollow-circle.svg'), url('./images/blackSide/circle.svg');
        background-position: center;
        background-size: 100%, 80%;
        background-repeat: no-repeat;
    }

    &.enPassant {
        background-image: url('./images/blackSide/circle.svg');
        background-position: center;
        background-size: 80%;
        background-repeat: no-repeat;
    }

    &.castlingRight {
        position: relative;
    }

    &.castlingRight::before {
        background-image: url('./images/blackSide/arrow-right.svg');
        background-position: 100% 95%;
        background-size: 35%;
        background-repeat: repeat-x;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        content: '';
        animation: forward 1s linear 0s infinite reverse;
    }

    &.castlingLeft {
        position: relative;
    }

    @keyframes forward {
        0% {
            transform: translateX(0px);
            opacity: 1;
        }
        50% {
            transform: translateX(-10px);
            opacity: 0;
        }
        51% {
            transform: translateX(10px);
            opacity: 0;
        }
        100% {
            transform: translateX(0px);
            opacity: 1;
        }
    }

    &.castlingLeft::after {
        background-image: url('./images/blackSide/arrow-left.svg');
        background-position: 100% 0%;
        background-size: 35%;
        background-repeat: repeat-x;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        content: '';
        animation: forward 1s linear 0s infinite normal;
    }
}

.opponent {
    &.possibleMove {
        background-image: url('./images/whiteSide/circle.svg');
        background-position: center;
        background-size: 50% auto;
        background-repeat: no-repeat;
    }

    &.possibleMoveHover {
        background-image: url('./images/whiteSide/hollow-circle.svg'), url('./images/whiteSide/hollow-circle.svg'),
            url('./images/whiteSide/circle.svg');
        background-position: center;
        background-size: 100%, 80%, 40%;
        background-repeat: no-repeat;
    }

    &.capture {
        background-image: url('./images/whiteSide/hollow-circle.svg'), url('./images/whiteSide/circle.svg');
        background-position: center;
        background-size: 100%, 80%;
        background-repeat: no-repeat;
    }

    &.enPassant {
        background-image: url('./images/whiteSide/circle.svg');
        background-position: center;
        background-size: 80%;
        background-repeat: no-repeat;
    }

    &.castlingRight {
        position: relative;
    }

    &.castlingRight::after {
        background-image: url('./images/whiteSide/arrow-right.svg');
        background-position: 100% 95%;
        background-size: 30%;
        background-repeat: repeat-x;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        content: '';
    }

    &.castlingLeft {
        position: relative;
    }

    &.castlingLeft::after {
        background-image: url('./images/whiteSide/arrow-left.svg');
        background-position: 100% 95%;
        background-size: 30%;
        background-repeat: repeat-x;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        content: '';
    }
}

.selected {
    border-style: double;
    border-width: 6px;
}
