@use '../../../styles/colors';
@use '../../../styles/common';
@use '../../../styles/typography';

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

@keyframes glitchedTile {
  0% {
    transform: skew(-5deg);
    left: -5px;
    opacity:1;
  }
  1% {
    transform: skew(-5deg);
    left: -5px;
  }
  2% {
    transform: skew(0deg);
    left: 5px;
    opacity:0.1;
  }
  5% {
    transform: skew(0deg);
    opacity:1;
  }
  6% {
    transform: skew(2deg);
  }
  7% {
    transform: skew(2deg);
  }
  8% {
    transform: skew(0deg);
  }
  10% {
    transform: skew(0deg);
  }
}

%use-animated-arrows {
  @keyframes forward {
    0% {
      transform: translateX(0px);
      opacity: 1;
    }
    50% {
      transform: translateX(-10px);
      opacity: 0;
    }
    51% {
      transform: translateX(10px);
      opacity: 0;
    }
    100% {
      transform: translateX(0px);
      opacity: 1;
    }
  }

  &.castlingRight::after {
    animation: forward 1s linear 0s infinite reverse;
  }

  &.castlingLeft::before {
    animation: forward 1s linear 0s infinite normal;
  }
}

@keyframes possibleMove {
  0% {
    transform: scale(0);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes possibleMoveHover {
  0% {
    transform: scale(0.4);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes capture {
  0% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

%animated-possibleMoves {
  animation: possibleMove 250ms ease-in-out;
}

%animated-possibleMoveHover {
  animation: possibleMoveHover 700ms ease-out infinite alternate;
}

%animated-capture {
  animation: capture 100ms ease-out infinite alternate;
}

$board__size: calc(90vh - 110px - 40px - 30px);
$board__size_mobile: 75vw;

.boardWrapper {
  display: grid;
  grid-template-areas:
    "vertical board"
    ". horizontal";
  grid-template-columns: 1fr $board__size;
  grid-template-rows: $board__size 1fr;
  user-select: none;

  @media only screen and (max-width: common.$mobileMax) {
    grid-template-columns: 1fr $board__size_mobile;
    grid-template-rows: $board__size_mobile 1fr;
  }
}

.board {
  grid-area: board;
  min-width: 320px;
  min-height: 320px;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
  grid-gap: 0.3vw;
  box-sizing: border-box;
  justify-items: center;
  align-items: center;
  animation: glitchedChessboard 45000ms infinite linear;
  animation-delay:60s;

  @media only screen and (max-width: common.$mobileMax) {
    min-width: 100%;
    min-height: 100%;
  }
}

.tile {
  display: flex;
  justify-items: center;
  align-items: flex-end;
  border-radius: 5px;
  padding:3px;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
}

.tile * {
  width: 55%;
  height: auto;
  margin: 0 auto;
  cursor: pointer;
}

.blackTile {
  border: 1px solid colors.$red;
  //shadow-blue-2 with inset
  
  box-shadow: inset 0px 0px 6px #fd6059, 0px 0px 2px #fd6059;
}

.whiteTile {
  border: 1px solid colors.$blue;
  //shadow-blue-2 with inset
  box-shadow: inset 0px 0px 6px #1ec8c8, 0px 0px 2px #1ec8c8;
}

.verticalAxi {
  grid-area: vertical;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: space-around;
  color: colors.$blue;
  height: $board__size;
  margin-right: 8px;
  @extend %h4;
  font-size: 18px;
  align-items: center;

  span {
    @extend %shadow-blue-text;
  }

  @media only screen and (max-width: common.$mobileMax) {
   height: $board__size_mobile;
  }
}

.horizontalAxi {
  font-size: 18px;
  line-height: 18px;
  grid-area: horizontal;
  display: flex;
  flex-direction: row;
  align-items: flex-end;
  justify-content: space-around;
  color: colors.$red;
  width: $board__size;
  @extend %h4;

  span {
    @extend %shadow-red-text;
  }

  @media only screen and (max-width: common.$mobileMax) {
    width: $board__size_mobile;
   }
}

.player {
  @extend %use-animated-arrows;
  margin: 0 -1px 0  -1px;

  &.possibleMove {
    position: relative;
  }

  &.possibleMove::after {
    background-image: url("./images/whiteSide/circle.svg");
    background-position: center;
    background-size: auto 30% ;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
    @extend %animated-possibleMoves;
    z-index: -1;
  }

  &.possibleMoveHover::before {
    background-image: url("./images/whiteSide/circle.svg");
    background-position: center;
    background-size: auto 30% ;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
    z-index:-1;
  }

  &.possibleMoveHover {
    position: relative;
    cursor: pointer;
  }

  &.possibleMoveHover::after {
    background-image: url("./images/whiteSide/hollow-circle.svg");
    background-position: center;
    background-size: 90%;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
    @extend %animated-possibleMoveHover;
    z-index: -1;
  }

  &.capture::before:hover {
    position: absolute;
    background-image: url("./images/whiteSide/hollow-circle.svg");
    background-position: center;
    background-size: 90%;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
    z-index: -1;
    @extend %animated-capture;
  }

  &.capture {
    background-image: url("./images/whiteSide/circle.svg");
    background-position: center;
    background-size: 60%;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    position: relative;
    background-origin: content-box;
  }

  &.enPassant {
    background-image: url("./images/whiteSide/circle.svg");
    background-position: center;
    background-origin: content-box;
    background-size: 60%;
    background-repeat: no-repeat;
    cursor: pointer;
  }

  &.castlingRight {
    position: relative;
  }

  &.castlingRight::after {
    background-image: url("./images/whiteSide/arrow-right.svg");
    background-position: 100% 95%;
    background-size: 35%;
    background-repeat: repeat-x;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
  }

  &.castlingLeft {
    position: relative;
  }

  &.castlingLeft::before {
    background-image: url("./images/whiteSide/arrow-left.svg");
    background-position: 100% 0%;
    background-size: 35%;
    background-repeat: repeat-x;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
  }

  &.selected {
    border-color: colors.$blue;
    border-style: double;
    border-width: 5px;
    cursor: pointer;
  }
}

.opponent {
  @extend %use-animated-arrows;

  &.possibleMove {
    position: relative;
  }

  &.possibleMove::after {
    background-image: url("./images/blackSide/circle.svg");
    background-position: center;
    background-size: auto 30% ;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
    @extend %animated-possibleMoves;
    z-index: -1;
  }

  &.possibleMoveHover::before {
    background-image: url("./images/blackSide/circle.svg");
    background-position: center;
    background-size: auto 30% ;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
    z-index:-1;
  }

  &.possibleMoveHover {
    position: relative;
    cursor: pointer;
    background-image: url("./images/blackSide/circle.svg");
    background-position: center;
    background-size: auto 30% ;
    background-origin: content-box;
    background-repeat: no-repeat;
  }

  &.possibleMoveHover::after {
    background-image: url("./images/blackSide/hollow-circle.svg");
    background-position: center;
    background-size: 90%;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
    @extend %animated-possibleMoveHover;
    z-index: -1;
  }

  &.capture::before:hover {
    position: absolute;
    background-image: url("./images/blackSide/hollow-circle.svg");
    background-position: center;
    background-size: 90%;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
    z-index: -1;
    @extend %animated-capture;
  }

  &.capture {
    background-image: url("./images/blackSide/circle.svg");
    background-position: center;
    background-size: 60%;
    background-origin: content-box;
    background-repeat: no-repeat;
    cursor: pointer;
    position: relative;
    background-origin: content-box;
  }

  &.enPassant {
    background-image: url("./images/blackSide/circle.svg");
    background-position: center;
    background-origin: content-box;
    background-size: 60%;
    background-repeat: no-repeat;
    cursor: pointer;
  }

  &.castlingRight {
    position: relative;
  }

  &.castlingRight::after {
    background-image: url("./images/blackSide/arrow-right.svg");
    background-position: 100% 95%;
    background-size: 35%;
    background-origin: content-box;
    background-repeat: repeat-x;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
  }

  &.castlingLeft {
    position: relative;
  }

  &.castlingLeft::before {
    background-image: url("./images/blackSide/arrow-left.svg");
    background-position: 100% 0%;
    background-size: 35%;
    background-origin: content-box;
    background-repeat: repeat-x;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: "";
  }

  &.selected {
    border-color: colors.$red;
    border-style: double;
    border-width: 5px;
    cursor: pointer;
  }
}
